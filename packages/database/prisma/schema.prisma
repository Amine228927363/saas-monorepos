generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String             @id @default(cuid())
  email               String             @unique
  password            String             @db.Text()
  full_name           String?            @db.VarChar(255)
  create_at           DateTime           @default(now())
  updated_at          DateTime           @default(now()) @updatedAt
  customer            Customer[]
  OnboardingProcess   OnboardingProcess? @relation(fields: [onboardingProcessId], references: [id])
  onboardingProcessId Int?
  workspaces          Workspace[]

  @@index([email])
  @@map("users")
}

model Customer {
  id                  String             @id @default(cuid())
  name                String
  email               String             @unique
  status              String
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  organization        String
  onboardingProcessID Int?
  onboardingProcess   OnboardingProcess? @relation(fields: [onboardingProcessID], references: [id])
  TaskKeepBy          String?
  user                User?              @relation(fields: [TaskKeepBy], references: [id])
  tasks               Task[]
  workspace           Workspace?         @relation(fields: [workspaceId], references: [id])
  workspaceId         Int?
}

model Organization {
  id    String @id @default(cuid())
  name  String
  email String @unique
  phone String @unique
}

model OnboardingProcess {
  id       Int        @id @default(autoincrement())
  step     String
  customer Customer[]
  tasks    Task[]
  user     User[]
}

model Workspace {
  id        Int        @id @default(autoincrement())
  name      String
  users     User[]
  Customers Customer[]
}

model Task {
  id          Int                @id @default(autoincrement())
  name        String
  description String?
  processId   Int?
  onboarding  OnboardingProcess? @relation(fields: [processId], references: [id])
  CustomerId  String?
  customer    Customer?          @relation(fields: [CustomerId], references: [id])
  status      Status             @default(ToDo)
  dueDate     DateTime
  workspaceId Int
}

enum Status {
  ToDo
  InProgress
  Done
}
